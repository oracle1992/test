bool OBJParser::Write(const wchar_t* ipFileName, const GBGPolyData& iPolyData)const
{
	bool bRetVal = false;
	std::ofstream objFile;
	objFile.open(ipFileName);

	if (objFile.is_open())
	{
		objFile.setf(std::ios_base::fixed, std::ios_base::floatfield);
		objFile << "# OBJFile by GARParser" << std::endl;
		int nPoints = iPolyData.GetNumPoints();
		const double *pPoints = iPolyData.GetPoints();
		objFile << "# Vertices: " << nPoints << std::endl;
		char firstChar = 'v';
		for (int i = 0; i < nPoints; i++)
			objFile << firstChar << ' ' << pPoints[i * 3] << ' ' << pPoints[i * 3 + 1] << ' ' << pPoints[i * 3 + 2] << std::endl;

		int nTriangles = iPolyData.GetNumTriangles();
		const int *pTriangleIndices = iPolyData.GetTriangles();
		objFile << "# Faces: " << nTriangles << std::endl;
		firstChar = 'f';
		for (int i = 0; i < nTriangles; i++)
			objFile << firstChar << ' ' << pTriangleIndices[i * 3] + 1 << ' ' << pTriangleIndices[i * 3 + 1] + 1 << ' ' << pTriangleIndices[i * 3 + 2] + 1 << std::endl;
		objFile << "# End Of File" << std::endl;
		
		objFile.close();
		bRetVal = true;
	}
	return bRetVal;
}
